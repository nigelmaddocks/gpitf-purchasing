/*
 * catalogue-api
 * NHS Digital GP IT Futures Buying Catalog API
 *
 * OpenAPI spec version: 1.0.0-private-beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A ‘capability’ which a ‘solution’ asserts that it provides.  This is then assessed by NHS to verify the ‘solution’ complies with the ‘capability’ it has claimed.
 */
@ApiModel(description = "A ‘capability’ which a ‘solution’ asserts that it provides.  This is then assessed by NHS to verify the ‘solution’ complies with the ‘capability’ it has claimed.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-10T14:20:36.344Z")
public class CapabilitiesImplemented {
  @JsonProperty("capabilityId")
  private String capabilityId = null;

  /**
   * Current status of this ClaimedCapability
   */
  public enum StatusEnum {
    DRAFT("Draft"),
    
    SUBMITTED("Submitted"),
    
    REMEDIATION("Remediation"),
    
    APPROVED("Approved"),
    
    REJECTED("Rejected");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text) /* nima added via sed --> */ || String.valueOf(b.ordinal()).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("qualityId")
  private String qualityId = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("solutionId")
  private String solutionId = null;

  @JsonProperty("ownerId")
  private String ownerId = null;

  public CapabilitiesImplemented capabilityId(String capabilityId) {
    this.capabilityId = capabilityId;
    return this;
  }

   /**
   * Unique identifier of capability
   * @return capabilityId
  **/
  @ApiModelProperty(required = true, value = "Unique identifier of capability")
  public String getCapabilityId() {
    return capabilityId;
  }

  public void setCapabilityId(String capabilityId) {
    this.capabilityId = capabilityId;
  }

  public CapabilitiesImplemented status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Current status of this ClaimedCapability
   * @return status
  **/
  @ApiModelProperty(value = "Current status of this ClaimedCapability")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

   /**
   * Unique identifier of Capability
   * @return qualityId
  **/
  @ApiModelProperty(value = "Unique identifier of Capability")
  public String getQualityId() {
    return qualityId;
  }

  public CapabilitiesImplemented id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of entity
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique identifier of entity")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CapabilitiesImplemented solutionId(String solutionId) {
    this.solutionId = solutionId;
    return this;
  }

   /**
   * Unique identifier of solution
   * @return solutionId
  **/
  @ApiModelProperty(required = true, value = "Unique identifier of solution")
  public String getSolutionId() {
    return solutionId;
  }

  public void setSolutionId(String solutionId) {
    this.solutionId = solutionId;
  }

  public CapabilitiesImplemented ownerId(String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * Unique identifier of supplier Contact who is responsible for this claim
   * @return ownerId
  **/
  @ApiModelProperty(value = "Unique identifier of supplier Contact who is responsible for this claim")
  public String getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CapabilitiesImplemented capabilitiesImplemented = (CapabilitiesImplemented) o;
    return Objects.equals(this.capabilityId, capabilitiesImplemented.capabilityId) &&
        Objects.equals(this.status, capabilitiesImplemented.status) &&
        Objects.equals(this.qualityId, capabilitiesImplemented.qualityId) &&
        Objects.equals(this.id, capabilitiesImplemented.id) &&
        Objects.equals(this.solutionId, capabilitiesImplemented.solutionId) &&
        Objects.equals(this.ownerId, capabilitiesImplemented.ownerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capabilityId, status, qualityId, id, solutionId, ownerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CapabilitiesImplemented {\n");
    
    sb.append("    capabilityId: ").append(toIndentedString(capabilityId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    qualityId: ").append(toIndentedString(qualityId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    solutionId: ").append(toIndentedString(solutionId)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

