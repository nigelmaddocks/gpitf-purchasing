/*
 * catalogue-api
 * NHS Digital GP IT Futures Buying Catalog API
 *
 * OpenAPI spec version: 1.0.0-private-beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CapabilitiesImplemented;
import io.swagger.client.model.CapabilitiesImplementedEvidence;
import io.swagger.client.model.CapabilitiesImplementedReviews;
import io.swagger.client.model.Solutions;
import io.swagger.client.model.StandardsApplicable;
import io.swagger.client.model.StandardsApplicableEvidence;
import io.swagger.client.model.StandardsApplicableReviews;
import io.swagger.client.model.TechnicalContacts;
import java.util.ArrayList;
import java.util.List;

/**
 * An Extended Solution with its corresponding Technical Contacts, ClaimedCapability, ClaimedStandard et al
 */
@ApiModel(description = "An Extended Solution with its corresponding Technical Contacts, ClaimedCapability, ClaimedStandard et al")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-10T14:20:36.344Z")
public class SolutionEx {
  @JsonProperty("solution")
  private Solutions solution = null;

  @JsonProperty("claimedCapability")
  private List<CapabilitiesImplemented> claimedCapability = null;

  @JsonProperty("claimedCapabilityEvidence")
  private List<CapabilitiesImplementedEvidence> claimedCapabilityEvidence = null;

  @JsonProperty("claimedCapabilityReview")
  private List<CapabilitiesImplementedReviews> claimedCapabilityReview = null;

  @JsonProperty("claimedStandard")
  private List<StandardsApplicable> claimedStandard = null;

  @JsonProperty("claimedStandardEvidence")
  private List<StandardsApplicableEvidence> claimedStandardEvidence = null;

  @JsonProperty("claimedStandardReview")
  private List<StandardsApplicableReviews> claimedStandardReview = null;

  @JsonProperty("technicalContact")
  private List<TechnicalContacts> technicalContact = null;

  public SolutionEx solution(Solutions solution) {
    this.solution = solution;
    return this;
  }

   /**
   * Solution
   * @return solution
  **/
  @ApiModelProperty(value = "Solution")
  public Solutions getSolution() {
    return solution;
  }

  public void setSolution(Solutions solution) {
    this.solution = solution;
  }

  public SolutionEx claimedCapability(List<CapabilitiesImplemented> claimedCapability) {
    this.claimedCapability = claimedCapability;
    return this;
  }

  public SolutionEx addClaimedCapabilityItem(CapabilitiesImplemented claimedCapabilityItem) {
    if (this.claimedCapability == null) {
      this.claimedCapability = new ArrayList<CapabilitiesImplemented>();
    }
    this.claimedCapability.add(claimedCapabilityItem);
    return this;
  }

   /**
   * A list of ClaimedCapability
   * @return claimedCapability
  **/
  @ApiModelProperty(value = "A list of ClaimedCapability")
  public List<CapabilitiesImplemented> getClaimedCapability() {
    return claimedCapability;
  }

  public void setClaimedCapability(List<CapabilitiesImplemented> claimedCapability) {
    this.claimedCapability = claimedCapability;
  }

  public SolutionEx claimedCapabilityEvidence(List<CapabilitiesImplementedEvidence> claimedCapabilityEvidence) {
    this.claimedCapabilityEvidence = claimedCapabilityEvidence;
    return this;
  }

  public SolutionEx addClaimedCapabilityEvidenceItem(CapabilitiesImplementedEvidence claimedCapabilityEvidenceItem) {
    if (this.claimedCapabilityEvidence == null) {
      this.claimedCapabilityEvidence = new ArrayList<CapabilitiesImplementedEvidence>();
    }
    this.claimedCapabilityEvidence.add(claimedCapabilityEvidenceItem);
    return this;
  }

   /**
   * A list of ClaimedCapabilityEvidence
   * @return claimedCapabilityEvidence
  **/
  @ApiModelProperty(value = "A list of ClaimedCapabilityEvidence")
  public List<CapabilitiesImplementedEvidence> getClaimedCapabilityEvidence() {
    return claimedCapabilityEvidence;
  }

  public void setClaimedCapabilityEvidence(List<CapabilitiesImplementedEvidence> claimedCapabilityEvidence) {
    this.claimedCapabilityEvidence = claimedCapabilityEvidence;
  }

  public SolutionEx claimedCapabilityReview(List<CapabilitiesImplementedReviews> claimedCapabilityReview) {
    this.claimedCapabilityReview = claimedCapabilityReview;
    return this;
  }

  public SolutionEx addClaimedCapabilityReviewItem(CapabilitiesImplementedReviews claimedCapabilityReviewItem) {
    if (this.claimedCapabilityReview == null) {
      this.claimedCapabilityReview = new ArrayList<CapabilitiesImplementedReviews>();
    }
    this.claimedCapabilityReview.add(claimedCapabilityReviewItem);
    return this;
  }

   /**
   * A list of ClaimedCapabilityReview
   * @return claimedCapabilityReview
  **/
  @ApiModelProperty(value = "A list of ClaimedCapabilityReview")
  public List<CapabilitiesImplementedReviews> getClaimedCapabilityReview() {
    return claimedCapabilityReview;
  }

  public void setClaimedCapabilityReview(List<CapabilitiesImplementedReviews> claimedCapabilityReview) {
    this.claimedCapabilityReview = claimedCapabilityReview;
  }

  public SolutionEx claimedStandard(List<StandardsApplicable> claimedStandard) {
    this.claimedStandard = claimedStandard;
    return this;
  }

  public SolutionEx addClaimedStandardItem(StandardsApplicable claimedStandardItem) {
    if (this.claimedStandard == null) {
      this.claimedStandard = new ArrayList<StandardsApplicable>();
    }
    this.claimedStandard.add(claimedStandardItem);
    return this;
  }

   /**
   * A list of ClaimedStandard
   * @return claimedStandard
  **/
  @ApiModelProperty(value = "A list of ClaimedStandard")
  public List<StandardsApplicable> getClaimedStandard() {
    return claimedStandard;
  }

  public void setClaimedStandard(List<StandardsApplicable> claimedStandard) {
    this.claimedStandard = claimedStandard;
  }

  public SolutionEx claimedStandardEvidence(List<StandardsApplicableEvidence> claimedStandardEvidence) {
    this.claimedStandardEvidence = claimedStandardEvidence;
    return this;
  }

  public SolutionEx addClaimedStandardEvidenceItem(StandardsApplicableEvidence claimedStandardEvidenceItem) {
    if (this.claimedStandardEvidence == null) {
      this.claimedStandardEvidence = new ArrayList<StandardsApplicableEvidence>();
    }
    this.claimedStandardEvidence.add(claimedStandardEvidenceItem);
    return this;
  }

   /**
   * A list of ClaimedStandardEvidence
   * @return claimedStandardEvidence
  **/
  @ApiModelProperty(value = "A list of ClaimedStandardEvidence")
  public List<StandardsApplicableEvidence> getClaimedStandardEvidence() {
    return claimedStandardEvidence;
  }

  public void setClaimedStandardEvidence(List<StandardsApplicableEvidence> claimedStandardEvidence) {
    this.claimedStandardEvidence = claimedStandardEvidence;
  }

  public SolutionEx claimedStandardReview(List<StandardsApplicableReviews> claimedStandardReview) {
    this.claimedStandardReview = claimedStandardReview;
    return this;
  }

  public SolutionEx addClaimedStandardReviewItem(StandardsApplicableReviews claimedStandardReviewItem) {
    if (this.claimedStandardReview == null) {
      this.claimedStandardReview = new ArrayList<StandardsApplicableReviews>();
    }
    this.claimedStandardReview.add(claimedStandardReviewItem);
    return this;
  }

   /**
   * A list of ClaimedStandardReview
   * @return claimedStandardReview
  **/
  @ApiModelProperty(value = "A list of ClaimedStandardReview")
  public List<StandardsApplicableReviews> getClaimedStandardReview() {
    return claimedStandardReview;
  }

  public void setClaimedStandardReview(List<StandardsApplicableReviews> claimedStandardReview) {
    this.claimedStandardReview = claimedStandardReview;
  }

  public SolutionEx technicalContact(List<TechnicalContacts> technicalContact) {
    this.technicalContact = technicalContact;
    return this;
  }

  public SolutionEx addTechnicalContactItem(TechnicalContacts technicalContactItem) {
    if (this.technicalContact == null) {
      this.technicalContact = new ArrayList<TechnicalContacts>();
    }
    this.technicalContact.add(technicalContactItem);
    return this;
  }

   /**
   * A list of TechnicalContact
   * @return technicalContact
  **/
  @ApiModelProperty(value = "A list of TechnicalContact")
  public List<TechnicalContacts> getTechnicalContact() {
    return technicalContact;
  }

  public void setTechnicalContact(List<TechnicalContacts> technicalContact) {
    this.technicalContact = technicalContact;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SolutionEx solutionEx = (SolutionEx) o;
    return Objects.equals(this.solution, solutionEx.solution) &&
        Objects.equals(this.claimedCapability, solutionEx.claimedCapability) &&
        Objects.equals(this.claimedCapabilityEvidence, solutionEx.claimedCapabilityEvidence) &&
        Objects.equals(this.claimedCapabilityReview, solutionEx.claimedCapabilityReview) &&
        Objects.equals(this.claimedStandard, solutionEx.claimedStandard) &&
        Objects.equals(this.claimedStandardEvidence, solutionEx.claimedStandardEvidence) &&
        Objects.equals(this.claimedStandardReview, solutionEx.claimedStandardReview) &&
        Objects.equals(this.technicalContact, solutionEx.technicalContact);
  }

  @Override
  public int hashCode() {
    return Objects.hash(solution, claimedCapability, claimedCapabilityEvidence, claimedCapabilityReview, claimedStandard, claimedStandardEvidence, claimedStandardReview, technicalContact);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SolutionEx {\n");
    
    sb.append("    solution: ").append(toIndentedString(solution)).append("\n");
    sb.append("    claimedCapability: ").append(toIndentedString(claimedCapability)).append("\n");
    sb.append("    claimedCapabilityEvidence: ").append(toIndentedString(claimedCapabilityEvidence)).append("\n");
    sb.append("    claimedCapabilityReview: ").append(toIndentedString(claimedCapabilityReview)).append("\n");
    sb.append("    claimedStandard: ").append(toIndentedString(claimedStandard)).append("\n");
    sb.append("    claimedStandardEvidence: ").append(toIndentedString(claimedStandardEvidence)).append("\n");
    sb.append("    claimedStandardReview: ").append(toIndentedString(claimedStandardReview)).append("\n");
    sb.append("    technicalContact: ").append(toIndentedString(technicalContact)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

