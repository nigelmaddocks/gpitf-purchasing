/*
 * catalogue-api
 * NHS Digital GP IT Futures Buying Catalog API
 *
 * OpenAPI spec version: 1.0.0-private-beta
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Capabilities;
import io.swagger.client.model.OptionalStandard;
import java.util.ArrayList;
import java.util.List;

/**
 * A single Capability with its corresponding OptionalStandard
 */
@ApiModel(description = "A single Capability with its corresponding OptionalStandard")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-04-10T14:20:36.344Z")
public class CapabilityMapping {
  @JsonProperty("capability")
  private Capabilities capability = null;

  @JsonProperty("optionalStandard")
  private List<OptionalStandard> optionalStandard = null;

  public CapabilityMapping capability(Capabilities capability) {
    this.capability = capability;
    return this;
  }

   /**
   * NHSD.GPITF.BuyingCatalog.Models.Porcelain.CapabilityMapping.Capability
   * @return capability
  **/
  @ApiModelProperty(value = "NHSD.GPITF.BuyingCatalog.Models.Porcelain.CapabilityMapping.Capability")
  public Capabilities getCapability() {
    return capability;
  }

  public void setCapability(Capabilities capability) {
    this.capability = capability;
  }

  public CapabilityMapping optionalStandard(List<OptionalStandard> optionalStandard) {
    this.optionalStandard = optionalStandard;
    return this;
  }

  public CapabilityMapping addOptionalStandardItem(OptionalStandard optionalStandardItem) {
    if (this.optionalStandard == null) {
      this.optionalStandard = new ArrayList<OptionalStandard>();
    }
    this.optionalStandard.add(optionalStandardItem);
    return this;
  }

   /**
   * A list of OptionalStandard
   * @return optionalStandard
  **/
  @ApiModelProperty(value = "A list of OptionalStandard")
  public List<OptionalStandard> getOptionalStandard() {
    return optionalStandard;
  }

  public void setOptionalStandard(List<OptionalStandard> optionalStandard) {
    this.optionalStandard = optionalStandard;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CapabilityMapping capabilityMapping = (CapabilityMapping) o;
    return Objects.equals(this.capability, capabilityMapping.capability) &&
        Objects.equals(this.optionalStandard, capabilityMapping.optionalStandard);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capability, optionalStandard);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CapabilityMapping {\n");
    
    sb.append("    capability: ").append(toIndentedString(capability)).append("\n");
    sb.append("    optionalStandard: ").append(toIndentedString(optionalStandard)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

